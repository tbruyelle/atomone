syntax = "proto3";
package atomone.multisig.v1;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/msg/v1/msg.proto";
import "amino/amino.proto";
import "atomone/multisig/v1/multisig.proto";

option go_package = "github.com/atomone-hub/atomone/x/multisig/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // CreateMultisig defines a method to create new multisig account.
  rpc CreateMultisig(MsgCreateMultisig) returns (MsgCreateMultisigResponse);

  // UpdateParams defines a governance operation for updating the x/multisig
  // module parameters. The authority is defined in the keeper.
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
}

// MsgCreateMultisig is used to create a multisig account.
message MsgCreateMultisig {
  option (amino.name) = "atomone/multisig/v1/CreateMultisig";

  // members are the members of the multisig account.
  repeated Member members = 1;

  // threshold is the minimum weight required for a proposal to pass.
  int64 threshold = 2;
}

// MsgCreateMultisigResponse is the response returned after multisig creation.
message MsgCreateMultisigResponse {
  string address = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

// Member defines the member of the multisig account.
message Member {
  string address = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  uint64 weight = 2;
}

// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "atomone/x/multisig/v1/MsgUpdateParams";

  // authority is the address that controls the module (defaults to x/gov unless
  // overwritten).
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // params defines the x/gov parameters to update.
  //
  // NOTE: All parameters must be supplied.
  Params params = 2
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}
